/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ButtonGroupProps".
 */
export type ButtonGroupProps =
  | {
      button: ButtonProps;
      id?: string | null;
    }[]
  | null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AccordionProps".
 */
export type AccordionProps =
  | {
      headline: string;
      text: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      };
      buttonGroup?: ButtonGroupProps;
      id?: string | null;
    }[]
  | null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeaderNavProps".
 */
export type HeaderNavProps = {
  highlight?: boolean | null;
  label: string;
  link?: LinkProps;
  id?: string | null;
}[];
/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    pages: Page;
    users: User;
    media: Media;
    events: Event;
    participants: Participant;
    speakers: Speaker;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    events: {
      participants: 'participants';
      speakers: 'speakers';
    };
  };
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    events: EventsSelect<false> | EventsSelect<true>;
    participants: ParticipantsSelect<false> | ParticipantsSelect<true>;
    speakers: SpeakersSelect<false> | SpeakersSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    general: General;
  };
  globalsSelect: {
    general: GeneralSelect<false> | GeneralSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  name: string;
  slug?: string | null;
  isLandingpage?: boolean | null;
  event?: (string | null) | Event;
  hero?: LandingpageHeroProps[] | null;
  layout?:
    | (
        | ContentBlockProps
        | TextFaqBlockProps
        | TextMediaColumnsBlockProps
        | LocationMediaBlockProps
        | SpeakerViewBlockProps
        | EventSumUpBlockProps
        | EventHighlightBarBlockProps
        | EventScheduleBlockProps
        | PricingCardsBlockProps
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events".
 */
export interface Event {
  id: string;
  name: string;
  location: string;
  /**
   * separate lines with ;
   */
  address?: string | null;
  eventDate: string;
  eventEnd: string;
  schedule?: EventSchedule;
  startRegistration: string;
  endRegistration: string;
  /**
   * 0 = infinite
   */
  maxParticipants?: number | null;
  /**
   * has to be synced with stripe!
   */
  prices: {
    value: number;
    stripeId: string;
    emphasized?: boolean | null;
    hasDiscount?: boolean | null;
    discount?: {
      minTickets: number;
      discountValue: number;
      stripeId: string;
    };
    name: string;
    slug: string;
    description: string;
    id?: string | null;
  }[];
  eventDescription: string;
  successPage: {
    headline: string;
    text: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
  };
  participants?: {
    docs?: (string | Participant)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  speakers?: {
    docs?: (string | Speaker)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "EventSchedule".
 */
export interface EventSchedule {
  days?:
    | {
        name: string;
        date: string;
        timeline: {
          start: string;
          end: string;
          headline: string;
          text?: string | null;
          buttonGroup?: ButtonGroupProps;
          id?: string | null;
        }[];
        id?: string | null;
      }[]
    | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ButtonProps".
 */
export interface ButtonProps {
  label: string;
  link?: LinkProps;
  variant: 'contained' | 'outlined' | 'tonal' | 'text';
  color: 'primary' | 'info';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LinkProps".
 */
export interface LinkProps {
  type?: ('reference' | 'custom' | 'callToAction') | null;
  newTab?: boolean | null;
  reference?: {
    relationTo: 'pages';
    value: string | Page;
  } | null;
  url?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "participants".
 */
export interface Participant {
  id: string;
  name?: string | null;
  email: string;
  company?: string | null;
  position?: string | null;
  event: string | Event;
  paymentId: string;
  paymentStatus: 'pending' | 'payed';
  newsletter?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "speakers".
 */
export interface Speaker {
  id: string;
  event: string | Event;
  image: string | Media;
  name: string;
  company?: string | null;
  position?: string | null;
  /**
   * mailto | tel are added automaticaly
   */
  badges?:
    | {
        linkTo?: ('linkedIn' | 'email' | 'website' | 'tel') | null;
        link: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LandingpageHeroProps".
 */
export interface LandingpageHeroProps {
  headline: string;
  subline?: string | null;
  text?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  buttonGroup?: ButtonGroupProps;
  media: string | Media;
  event: string | Event;
  id?: string | null;
  blockName?: string | null;
  blockType: 'landingpage-hero';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlockProps".
 */
export interface ContentBlockProps {
  hideBlock?: boolean | null;
  /**
   * section id without "#"
   */
  anchor?: string | null;
  text: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  buttonGroup?: ButtonGroupProps;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content-block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TextFaqBlockProps".
 */
export interface TextFaqBlockProps {
  hideBlock?: boolean | null;
  /**
   * section id without "#"
   */
  anchor?: string | null;
  header: HeaderProps;
  text?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  accordion?: AccordionProps;
  accordionPosition: 'left' | 'right';
  buttonGroup?: ButtonGroupProps;
  id?: string | null;
  blockName?: string | null;
  blockType: 'text-faq-block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeaderProps".
 */
export interface HeaderProps {
  overline?: string | null;
  hasIcon?: boolean | null;
  headline: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TextMediaColumnsBlockProps".
 */
export interface TextMediaColumnsBlockProps {
  hideBlock?: boolean | null;
  /**
   * section id without "#"
   */
  anchor?: string | null;
  columns: {
    media: string | Media;
    header: HeaderProps;
    text: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    buttonGroup?: ButtonGroupProps;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'text-media-columns-block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LocationMediaBlockProps".
 */
export interface LocationMediaBlockProps {
  hideBlock?: boolean | null;
  /**
   * section id without "#"
   */
  anchor?: string | null;
  header: HeaderProps;
  text?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  event: string | Event;
  /**
   * Text displayed after location address
   */
  textTwo?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  media?: (string | null) | Media;
  mediaPosition: 'left' | 'right';
  buttonGroup?: ButtonGroupProps;
  id?: string | null;
  blockName?: string | null;
  blockType: 'location-media-block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SpeakerViewBlockProps".
 */
export interface SpeakerViewBlockProps {
  hideBlock?: boolean | null;
  /**
   * section id without "#"
   */
  anchor?: string | null;
  header: HeaderProps;
  text?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  event: string | Event;
  id?: string | null;
  blockName?: string | null;
  blockType: 'speaker-view-block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "EventSumUpBlockProps".
 */
export interface EventSumUpBlockProps {
  hideBlock?: boolean | null;
  /**
   * section id without "#"
   */
  anchor?: string | null;
  header: HeaderProps;
  text?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  cards?:
    | {
        headline: string;
        text: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        id?: string | null;
      }[]
    | null;
  buttonGroup?: ButtonGroupProps;
  id?: string | null;
  blockName?: string | null;
  blockType: 'event-sum-up-block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "EventHighlightBarBlockProps".
 */
export interface EventHighlightBarBlockProps {
  hideBlock?: boolean | null;
  /**
   * section id without "#"
   */
  anchor?: string | null;
  columns: {
    variant: 'text' | 'number';
    textHighlight?: HighlightTextColumnProps;
    numberHighlight?: HighlightNumberColumnProps;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'event-highlight-bar-block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HighlightTextColumnProps".
 */
export interface HighlightTextColumnProps {
  headline: string;
  subline: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HighlightNumberColumnProps".
 */
export interface HighlightNumberColumnProps {
  prefix?: string | null;
  startNumber: number;
  endNumber: number;
  sufix?: string | null;
  subline: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "EventScheduleBlockProps".
 */
export interface EventScheduleBlockProps {
  hideBlock?: boolean | null;
  /**
   * section id without "#"
   */
  anchor?: string | null;
  header: HeaderProps;
  text?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  newsletter?: {
    showNewsletterBox?: boolean | null;
    data?: NewsletterBoxData;
  };
  scheduleHeadline?: string | null;
  buttonGroup?: ButtonGroupProps;
  id?: string | null;
  blockName?: string | null;
  blockType: 'event-schedule-block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "NewsletterBoxData".
 */
export interface NewsletterBoxData {
  headline: string;
  text: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  btnLabel: string;
  nameInput?: boolean | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PricingCardsBlockProps".
 */
export interface PricingCardsBlockProps {
  hideBlock?: boolean | null;
  /**
   * section id without "#"
   */
  anchor?: string | null;
  header: HeaderProps;
  text?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  backgroundMedia: string | Media;
  buttonGroup?: ButtonGroupProps;
  id?: string | null;
  blockName?: string | null;
  blockType: 'pricing-cards-block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'events';
        value: string | Event;
      } | null)
    | ({
        relationTo: 'participants';
        value: string | Participant;
      } | null)
    | ({
        relationTo: 'speakers';
        value: string | Speaker;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  isLandingpage?: T;
  event?: T;
  hero?:
    | T
    | {
        'landingpage-hero'?: T | LandingpageHeroPropsSelect<T>;
      };
  layout?:
    | T
    | {
        'content-block'?: T | ContentBlockPropsSelect<T>;
        'text-faq-block'?: T | TextFaqBlockPropsSelect<T>;
        'text-media-columns-block'?: T | TextMediaColumnsBlockPropsSelect<T>;
        'location-media-block'?: T | LocationMediaBlockPropsSelect<T>;
        'speaker-view-block'?: T | SpeakerViewBlockPropsSelect<T>;
        'event-sum-up-block'?: T | EventSumUpBlockPropsSelect<T>;
        'event-highlight-bar-block'?: T | EventHighlightBarBlockPropsSelect<T>;
        'event-schedule-block'?: T | EventScheduleBlockPropsSelect<T>;
        'pricing-cards-block'?: T | PricingCardsBlockPropsSelect<T>;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LandingpageHeroProps_select".
 */
export interface LandingpageHeroPropsSelect<T extends boolean = true> {
  headline?: T;
  subline?: T;
  text?: T;
  buttonGroup?: T | ButtonGroupPropsSelect<T>;
  media?: T;
  event?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ButtonGroupProps_select".
 */
export interface ButtonGroupPropsSelect<T extends boolean = true> {
  button?: T | ButtonPropsSelect<T>;
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ButtonProps_select".
 */
export interface ButtonPropsSelect<T extends boolean = true> {
  label?: T;
  link?: T | LinkPropsSelect<T>;
  variant?: T;
  color?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LinkProps_select".
 */
export interface LinkPropsSelect<T extends boolean = true> {
  type?: T;
  newTab?: T;
  reference?: T;
  url?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlockProps_select".
 */
export interface ContentBlockPropsSelect<T extends boolean = true> {
  hideBlock?: T;
  anchor?: T;
  text?: T;
  buttonGroup?: T | ButtonGroupPropsSelect<T>;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TextFaqBlockProps_select".
 */
export interface TextFaqBlockPropsSelect<T extends boolean = true> {
  hideBlock?: T;
  anchor?: T;
  header?: T | HeaderPropsSelect<T>;
  text?: T;
  accordion?: T | AccordionPropsSelect<T>;
  accordionPosition?: T;
  buttonGroup?: T | ButtonGroupPropsSelect<T>;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeaderProps_select".
 */
export interface HeaderPropsSelect<T extends boolean = true> {
  overline?: T;
  hasIcon?: T;
  headline?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AccordionProps_select".
 */
export interface AccordionPropsSelect<T extends boolean = true> {
  headline?: T;
  text?: T;
  buttonGroup?: T | ButtonGroupPropsSelect<T>;
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TextMediaColumnsBlockProps_select".
 */
export interface TextMediaColumnsBlockPropsSelect<T extends boolean = true> {
  hideBlock?: T;
  anchor?: T;
  columns?:
    | T
    | {
        media?: T;
        header?: T | HeaderPropsSelect<T>;
        text?: T;
        buttonGroup?: T | ButtonGroupPropsSelect<T>;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LocationMediaBlockProps_select".
 */
export interface LocationMediaBlockPropsSelect<T extends boolean = true> {
  hideBlock?: T;
  anchor?: T;
  header?: T | HeaderPropsSelect<T>;
  text?: T;
  event?: T;
  textTwo?: T;
  media?: T;
  mediaPosition?: T;
  buttonGroup?: T | ButtonGroupPropsSelect<T>;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SpeakerViewBlockProps_select".
 */
export interface SpeakerViewBlockPropsSelect<T extends boolean = true> {
  hideBlock?: T;
  anchor?: T;
  header?: T | HeaderPropsSelect<T>;
  text?: T;
  event?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "EventSumUpBlockProps_select".
 */
export interface EventSumUpBlockPropsSelect<T extends boolean = true> {
  hideBlock?: T;
  anchor?: T;
  header?: T | HeaderPropsSelect<T>;
  text?: T;
  cards?:
    | T
    | {
        headline?: T;
        text?: T;
        id?: T;
      };
  buttonGroup?: T | ButtonGroupPropsSelect<T>;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "EventHighlightBarBlockProps_select".
 */
export interface EventHighlightBarBlockPropsSelect<T extends boolean = true> {
  hideBlock?: T;
  anchor?: T;
  columns?:
    | T
    | {
        variant?: T;
        textHighlight?: T | HighlightTextColumnPropsSelect<T>;
        numberHighlight?: T | HighlightNumberColumnPropsSelect<T>;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HighlightTextColumnProps_select".
 */
export interface HighlightTextColumnPropsSelect<T extends boolean = true> {
  headline?: T;
  subline?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HighlightNumberColumnProps_select".
 */
export interface HighlightNumberColumnPropsSelect<T extends boolean = true> {
  prefix?: T;
  startNumber?: T;
  endNumber?: T;
  sufix?: T;
  subline?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "EventScheduleBlockProps_select".
 */
export interface EventScheduleBlockPropsSelect<T extends boolean = true> {
  hideBlock?: T;
  anchor?: T;
  header?: T | HeaderPropsSelect<T>;
  text?: T;
  newsletter?:
    | T
    | {
        showNewsletterBox?: T;
        data?: T | NewsletterBoxDataSelect<T>;
      };
  scheduleHeadline?: T;
  buttonGroup?: T | ButtonGroupPropsSelect<T>;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "NewsletterBoxData_select".
 */
export interface NewsletterBoxDataSelect<T extends boolean = true> {
  headline?: T;
  text?: T;
  btnLabel?: T;
  nameInput?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PricingCardsBlockProps_select".
 */
export interface PricingCardsBlockPropsSelect<T extends boolean = true> {
  hideBlock?: T;
  anchor?: T;
  header?: T | HeaderPropsSelect<T>;
  text?: T;
  backgroundMedia?: T;
  buttonGroup?: T | ButtonGroupPropsSelect<T>;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events_select".
 */
export interface EventsSelect<T extends boolean = true> {
  name?: T;
  location?: T;
  address?: T;
  eventDate?: T;
  eventEnd?: T;
  schedule?: T | EventScheduleSelect<T>;
  startRegistration?: T;
  endRegistration?: T;
  maxParticipants?: T;
  prices?:
    | T
    | {
        value?: T;
        stripeId?: T;
        emphasized?: T;
        hasDiscount?: T;
        discount?:
          | T
          | {
              minTickets?: T;
              discountValue?: T;
              stripeId?: T;
            };
        name?: T;
        slug?: T;
        description?: T;
        id?: T;
      };
  eventDescription?: T;
  successPage?:
    | T
    | {
        headline?: T;
        text?: T;
      };
  participants?: T;
  speakers?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "EventSchedule_select".
 */
export interface EventScheduleSelect<T extends boolean = true> {
  days?:
    | T
    | {
        name?: T;
        date?: T;
        timeline?:
          | T
          | {
              start?: T;
              end?: T;
              headline?: T;
              text?: T;
              buttonGroup?: T | ButtonGroupPropsSelect<T>;
              id?: T;
            };
        id?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "participants_select".
 */
export interface ParticipantsSelect<T extends boolean = true> {
  name?: T;
  email?: T;
  company?: T;
  position?: T;
  event?: T;
  paymentId?: T;
  paymentStatus?: T;
  newsletter?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "speakers_select".
 */
export interface SpeakersSelect<T extends boolean = true> {
  event?: T;
  image?: T;
  name?: T;
  company?: T;
  position?: T;
  badges?:
    | T
    | {
        linkTo?: T;
        link?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "general".
 */
export interface General {
  id: string;
  homepage: string | Page;
  activeEvent: string | Event;
  logo: string | Media;
  mobileLogo?: (string | null) | Media;
  icon?: (string | null) | Media;
  header: HeaderNavProps;
  footer?:
    | {
        label: string;
        link?: LinkProps;
        id?: string | null;
      }[]
    | null;
  copyrightLabel: string;
  cookieConsentLabel: string;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "general_select".
 */
export interface GeneralSelect<T extends boolean = true> {
  homepage?: T;
  activeEvent?: T;
  logo?: T;
  mobileLogo?: T;
  icon?: T;
  header?: T | HeaderNavPropsSelect<T>;
  footer?:
    | T
    | {
        label?: T;
        link?: T | LinkPropsSelect<T>;
        id?: T;
      };
  copyrightLabel?: T;
  cookieConsentLabel?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeaderNavProps_select".
 */
export interface HeaderNavPropsSelect<T extends boolean = true> {
  highlight?: T;
  label?: T;
  link?: T | LinkPropsSelect<T>;
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}